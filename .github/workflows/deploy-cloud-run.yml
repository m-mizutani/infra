name: deploy-cloud-run

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
        description: 'Name of the Cloud Run service (warren or backstream)'
      image_path:
        required: true
        type: string
        description: 'Path to the image directory (e.g., images/warren)'
      project_id:
        required: true
        type: string
        description: 'GCP Project ID'
      region:
        required: false
        type: string
        default: 'asia-northeast1'
        description: 'GCP Region'
      repository:
        required: false
        type: string
        default: 'container-images'
        description: 'Artifact Registry repository name'
      terraform_directory:
        required: false
        type: string
        default: 'google-cloud/mztn-service'
        description: 'Terraform working directory'

env:
  REGISTRY_LOCATION: ${{ inputs.region }}
  PROJECT_ID: ${{ inputs.project_id }}
  REPOSITORY: ${{ inputs.repository }}

jobs:
  build:
    name: 'Build Docker Image'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/507354148656/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: 'github-actions@${{ inputs.project_id }}.iam.gserviceaccount.com'

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev

    - name: Build Docker image
      run: |
        cd ${{ inputs.image_path }}
        IMAGE_URL="${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ inputs.service_name }}"
        docker build -t ${IMAGE_URL}:latest .

  push:
    name: 'Push Docker Image'
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/507354148656/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: 'github-actions@${{ inputs.project_id }}.iam.gserviceaccount.com'

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev

    - name: Build and Push Docker image
      run: |
        cd ${{ inputs.image_path }}
        IMAGE_URL="${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ inputs.service_name }}"
        docker build -t ${IMAGE_URL}:latest .
        docker push ${IMAGE_URL}:latest

    - name: Get image digest
      id: digest
      run: |
        IMAGE_URL="${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ inputs.service_name }}"
        DIGEST=$(gcloud artifacts docker images describe \
          ${IMAGE_URL}:latest \
          --format='value(image_summary.digest)')
        echo "digest=${DIGEST}" >> $GITHUB_OUTPUT
        echo "full_image=${IMAGE_URL}@${DIGEST}" >> $GITHUB_OUTPUT
        echo "Image digest: ${DIGEST}"

  terraform-apply:
    name: 'Apply Terraform'
    needs: push
    uses: ./.github/workflows/terraform-apply.yml
    with:
      working_directory: ${{ inputs.terraform_directory }}
      project_id: ${{ inputs.project_id }}
    secrets: inherit